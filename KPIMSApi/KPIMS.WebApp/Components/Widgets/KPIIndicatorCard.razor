 @using KPIMS.Repos.Repositories.Common.Interfaces;
 @using KPIMS.Core.Models;

 @rendermode InteractiveServer

  @inject IDropdownRepo DropdownRepo

@code {
    private List<DbKpiIndicator> kpiIndicators = new List<DbKpiIndicator>();
  }

<div class="card  w-100">
    <div class="card-header pb-0">
        <h4>KPI Chart</h4>
    </div>
    <div class="card-body">
        <div class="table-responsive">
            <table class="table kpi-table">
                <thead>
                    <tr>
                        <th>Label</th>
                        <th>Point</th>
                        <th>Benefit</th>
                    </tr>
                </thead>
                <tbody>
                    @if (kpiIndicators.Any())
                    {
                        foreach (var item in kpiIndicators)
                        {
                            <tr>
                                <td>@item.KPILabel</td>
                                <td>@item.MinPoint - @item.MaxPoint</td>
                                @if(item.Id == 1){
                                    <td align="center"><span class="badge badge-danger text-white rounded-pill p-2">@item.PerofrmanceBenefit</span></td>
                                }else if(item.Id == 5){
                                    <td align="center"><span class="badge badge-primary text-white rounded-pill p-2">@item.PerofrmanceBenefit</span></td>
                                }
                                else if (item.Id == 6)
                                {
                                    <td align="center"><span class="badge badge-success text-white rounded-pill p-2">@item.PerofrmanceBenefit</span></td>
                                }
                                else
                                {
                                    <td align="center">@item.PerofrmanceBenefit</td>
                                }
                              
                            </tr>
                        }
                    }

                </tbody>
            </table>
        </div>
    </div>
</div>

@code {

    protected override async Task OnInitializedAsync()
    {
        await LoadData();
    }

    async Task LoadData()
    {
        kpiIndicators = await DropdownRepo.GetKpiIndicatorsAsync();
        StateHasChanged();
    }
}
